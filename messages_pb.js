// source: messages.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.myPackage.AccountInfo', null, global);
goog.exportSymbol('proto.myPackage.CharacterAppearance', null, global);
goog.exportSymbol('proto.myPackage.CharacterAppearancePart', null, global);
goog.exportSymbol('proto.myPackage.CharacterInfo', null, global);
goog.exportSymbol('proto.myPackage.EntityType', null, global);
goog.exportSymbol('proto.myPackage.ErrorCode', null, global);
goog.exportSymbol('proto.myPackage.EstablishSessionRequest', null, global);
goog.exportSymbol('proto.myPackage.EstablishSessionResponse', null, global);
goog.exportSymbol('proto.myPackage.FacingDirection', null, global);
goog.exportSymbol('proto.myPackage.GameSessionOpenedEvent', null, global);
goog.exportSymbol('proto.myPackage.MoveType', null, global);
goog.exportSymbol('proto.myPackage.PingMessage', null, global);
goog.exportSymbol('proto.myPackage.PlayerState', null, global);
goog.exportSymbol('proto.myPackage.PongMessage', null, global);
goog.exportSymbol('proto.myPackage.Vector2', null, global);
goog.exportSymbol('proto.myPackage.WrappedEntityState', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.PingMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.PingMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.PingMessage.displayName = 'proto.myPackage.PingMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.PongMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.PongMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.PongMessage.displayName = 'proto.myPackage.PongMessage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.EstablishSessionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.EstablishSessionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.EstablishSessionRequest.displayName = 'proto.myPackage.EstablishSessionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.EstablishSessionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.EstablishSessionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.EstablishSessionResponse.displayName = 'proto.myPackage.EstablishSessionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.AccountInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.AccountInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.AccountInfo.displayName = 'proto.myPackage.AccountInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.CharacterInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.myPackage.CharacterInfo.repeatedFields_, null);
};
goog.inherits(proto.myPackage.CharacterInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.CharacterInfo.displayName = 'proto.myPackage.CharacterInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.CharacterAppearance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.CharacterAppearance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.CharacterAppearance.displayName = 'proto.myPackage.CharacterAppearance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.WrappedEntityState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.WrappedEntityState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.WrappedEntityState.displayName = 'proto.myPackage.WrappedEntityState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.PlayerState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.myPackage.PlayerState.repeatedFields_, null);
};
goog.inherits(proto.myPackage.PlayerState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.PlayerState.displayName = 'proto.myPackage.PlayerState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.Vector2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.Vector2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.Vector2.displayName = 'proto.myPackage.Vector2';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.myPackage.GameSessionOpenedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.myPackage.GameSessionOpenedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.myPackage.GameSessionOpenedEvent.displayName = 'proto.myPackage.GameSessionOpenedEvent';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.PingMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.PingMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.PingMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.PingMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    clienttimestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    servertimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.PingMessage}
 */
proto.myPackage.PingMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.PingMessage;
  return proto.myPackage.PingMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.PingMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.PingMessage}
 */
proto.myPackage.PingMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClienttimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServertimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.PingMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.PingMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.PingMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.PingMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClienttimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getServertimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 clientTimestamp = 1;
 * @return {number}
 */
proto.myPackage.PingMessage.prototype.getClienttimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PingMessage} returns this
 */
proto.myPackage.PingMessage.prototype.setClienttimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 serverTimestamp = 2;
 * @return {number}
 */
proto.myPackage.PingMessage.prototype.getServertimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PingMessage} returns this
 */
proto.myPackage.PingMessage.prototype.setServertimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.PongMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.PongMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.PongMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.PongMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    clienttimestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    servertimestamp: jspb.Message.getFieldWithDefault(msg, 2, 0),
    ismasterclock: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.PongMessage}
 */
proto.myPackage.PongMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.PongMessage;
  return proto.myPackage.PongMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.PongMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.PongMessage}
 */
proto.myPackage.PongMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClienttimestamp(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServertimestamp(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmasterclock(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.PongMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.PongMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.PongMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.PongMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClienttimestamp();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getServertimestamp();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getIsmasterclock();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional int64 clientTimestamp = 1;
 * @return {number}
 */
proto.myPackage.PongMessage.prototype.getClienttimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PongMessage} returns this
 */
proto.myPackage.PongMessage.prototype.setClienttimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 serverTimestamp = 2;
 * @return {number}
 */
proto.myPackage.PongMessage.prototype.getServertimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PongMessage} returns this
 */
proto.myPackage.PongMessage.prototype.setServertimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool isMasterClock = 3;
 * @return {boolean}
 */
proto.myPackage.PongMessage.prototype.getIsmasterclock = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.myPackage.PongMessage} returns this
 */
proto.myPackage.PongMessage.prototype.setIsmasterclock = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.EstablishSessionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.EstablishSessionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.EstablishSessionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.EstablishSessionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    application: jspb.Message.getFieldWithDefault(msg, 1, ""),
    version: jspb.Message.getFieldWithDefault(msg, 2, ""),
    authenticationtoken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    clienttimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.EstablishSessionRequest}
 */
proto.myPackage.EstablishSessionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.EstablishSessionRequest;
  return proto.myPackage.EstablishSessionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.EstablishSessionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.EstablishSessionRequest}
 */
proto.myPackage.EstablishSessionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplication(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthenticationtoken(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClienttimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.EstablishSessionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.EstablishSessionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.EstablishSessionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.EstablishSessionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplication();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthenticationtoken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getClienttimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional string application = 1;
 * @return {string}
 */
proto.myPackage.EstablishSessionRequest.prototype.getApplication = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.myPackage.EstablishSessionRequest} returns this
 */
proto.myPackage.EstablishSessionRequest.prototype.setApplication = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string version = 2;
 * @return {string}
 */
proto.myPackage.EstablishSessionRequest.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.myPackage.EstablishSessionRequest} returns this
 */
proto.myPackage.EstablishSessionRequest.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string authenticationToken = 3;
 * @return {string}
 */
proto.myPackage.EstablishSessionRequest.prototype.getAuthenticationtoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.myPackage.EstablishSessionRequest} returns this
 */
proto.myPackage.EstablishSessionRequest.prototype.setAuthenticationtoken = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 clientTimestamp = 4;
 * @return {number}
 */
proto.myPackage.EstablishSessionRequest.prototype.getClienttimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.EstablishSessionRequest} returns this
 */
proto.myPackage.EstablishSessionRequest.prototype.setClienttimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.EstablishSessionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.EstablishSessionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.EstablishSessionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.EstablishSessionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    error: jspb.Message.getFieldWithDefault(msg, 2, 0),
    clienttimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    mastertimestamp: jspb.Message.getFieldWithDefault(msg, 4, 0),
    account: (f = msg.getAccount()) && proto.myPackage.AccountInfo.toObject(includeInstance, f),
    character: (f = msg.getCharacter()) && proto.myPackage.CharacterInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.EstablishSessionResponse}
 */
proto.myPackage.EstablishSessionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.EstablishSessionResponse;
  return proto.myPackage.EstablishSessionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.EstablishSessionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.EstablishSessionResponse}
 */
proto.myPackage.EstablishSessionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 2:
      var value = /** @type {!proto.myPackage.ErrorCode} */ (reader.readEnum());
      msg.setError(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setClienttimestamp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMastertimestamp(value);
      break;
    case 5:
      var value = new proto.myPackage.AccountInfo;
      reader.readMessage(value,proto.myPackage.AccountInfo.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 6:
      var value = new proto.myPackage.CharacterInfo;
      reader.readMessage(value,proto.myPackage.CharacterInfo.deserializeBinaryFromReader);
      msg.setCharacter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.EstablishSessionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.EstablishSessionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.EstablishSessionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.EstablishSessionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getError();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getClienttimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMastertimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.myPackage.AccountInfo.serializeBinaryToWriter
    );
  }
  f = message.getCharacter();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.myPackage.CharacterInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.myPackage.EstablishSessionResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.myPackage.EstablishSessionResponse} returns this
 */
proto.myPackage.EstablishSessionResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional ErrorCode error = 2;
 * @return {!proto.myPackage.ErrorCode}
 */
proto.myPackage.EstablishSessionResponse.prototype.getError = function() {
  return /** @type {!proto.myPackage.ErrorCode} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.myPackage.ErrorCode} value
 * @return {!proto.myPackage.EstablishSessionResponse} returns this
 */
proto.myPackage.EstablishSessionResponse.prototype.setError = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 clientTimestamp = 3;
 * @return {number}
 */
proto.myPackage.EstablishSessionResponse.prototype.getClienttimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.EstablishSessionResponse} returns this
 */
proto.myPackage.EstablishSessionResponse.prototype.setClienttimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 masterTimestamp = 4;
 * @return {number}
 */
proto.myPackage.EstablishSessionResponse.prototype.getMastertimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.EstablishSessionResponse} returns this
 */
proto.myPackage.EstablishSessionResponse.prototype.setMastertimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional AccountInfo account = 5;
 * @return {?proto.myPackage.AccountInfo}
 */
proto.myPackage.EstablishSessionResponse.prototype.getAccount = function() {
  return /** @type{?proto.myPackage.AccountInfo} */ (
    jspb.Message.getWrapperField(this, proto.myPackage.AccountInfo, 5));
};


/**
 * @param {?proto.myPackage.AccountInfo|undefined} value
 * @return {!proto.myPackage.EstablishSessionResponse} returns this
*/
proto.myPackage.EstablishSessionResponse.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.myPackage.EstablishSessionResponse} returns this
 */
proto.myPackage.EstablishSessionResponse.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.myPackage.EstablishSessionResponse.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional CharacterInfo character = 6;
 * @return {?proto.myPackage.CharacterInfo}
 */
proto.myPackage.EstablishSessionResponse.prototype.getCharacter = function() {
  return /** @type{?proto.myPackage.CharacterInfo} */ (
    jspb.Message.getWrapperField(this, proto.myPackage.CharacterInfo, 6));
};


/**
 * @param {?proto.myPackage.CharacterInfo|undefined} value
 * @return {!proto.myPackage.EstablishSessionResponse} returns this
*/
proto.myPackage.EstablishSessionResponse.prototype.setCharacter = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.myPackage.EstablishSessionResponse} returns this
 */
proto.myPackage.EstablishSessionResponse.prototype.clearCharacter = function() {
  return this.setCharacter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.myPackage.EstablishSessionResponse.prototype.hasCharacter = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.AccountInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.AccountInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.AccountInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.AccountInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createdat: jspb.Message.getFieldWithDefault(msg, 3, 0),
    banneduntil: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.AccountInfo}
 */
proto.myPackage.AccountInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.AccountInfo;
  return proto.myPackage.AccountInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.AccountInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.AccountInfo}
 */
proto.myPackage.AccountInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBanneduntil(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.AccountInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.AccountInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.AccountInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.AccountInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getBanneduntil();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
};


/**
 * optional int64 accountId = 1;
 * @return {number}
 */
proto.myPackage.AccountInfo.prototype.getAccountid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.AccountInfo} returns this
 */
proto.myPackage.AccountInfo.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.myPackage.AccountInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.myPackage.AccountInfo} returns this
 */
proto.myPackage.AccountInfo.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 createdAt = 3;
 * @return {number}
 */
proto.myPackage.AccountInfo.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.AccountInfo} returns this
 */
proto.myPackage.AccountInfo.prototype.setCreatedat = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 bannedUntil = 4;
 * @return {number}
 */
proto.myPackage.AccountInfo.prototype.getBanneduntil = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.AccountInfo} returns this
 */
proto.myPackage.AccountInfo.prototype.setBanneduntil = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.myPackage.CharacterInfo.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.CharacterInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.CharacterInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.CharacterInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.CharacterInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    characterid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    createdtimestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    appearanceList: jspb.Message.toObjectList(msg.getAppearanceList(),
    proto.myPackage.CharacterAppearance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.CharacterInfo}
 */
proto.myPackage.CharacterInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.CharacterInfo;
  return proto.myPackage.CharacterInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.CharacterInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.CharacterInfo}
 */
proto.myPackage.CharacterInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharacterid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedtimestamp(value);
      break;
    case 4:
      var value = new proto.myPackage.CharacterAppearance;
      reader.readMessage(value,proto.myPackage.CharacterAppearance.deserializeBinaryFromReader);
      msg.addAppearance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.CharacterInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.CharacterInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.CharacterInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.CharacterInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCharacterid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreatedtimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getAppearanceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.myPackage.CharacterAppearance.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 characterId = 1;
 * @return {number}
 */
proto.myPackage.CharacterInfo.prototype.getCharacterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.CharacterInfo} returns this
 */
proto.myPackage.CharacterInfo.prototype.setCharacterid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.myPackage.CharacterInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.myPackage.CharacterInfo} returns this
 */
proto.myPackage.CharacterInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 createdTimestamp = 3;
 * @return {number}
 */
proto.myPackage.CharacterInfo.prototype.getCreatedtimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.CharacterInfo} returns this
 */
proto.myPackage.CharacterInfo.prototype.setCreatedtimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated CharacterAppearance appearance = 4;
 * @return {!Array<!proto.myPackage.CharacterAppearance>}
 */
proto.myPackage.CharacterInfo.prototype.getAppearanceList = function() {
  return /** @type{!Array<!proto.myPackage.CharacterAppearance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.myPackage.CharacterAppearance, 4));
};


/**
 * @param {!Array<!proto.myPackage.CharacterAppearance>} value
 * @return {!proto.myPackage.CharacterInfo} returns this
*/
proto.myPackage.CharacterInfo.prototype.setAppearanceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.myPackage.CharacterAppearance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.myPackage.CharacterAppearance}
 */
proto.myPackage.CharacterInfo.prototype.addAppearance = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.myPackage.CharacterAppearance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.myPackage.CharacterInfo} returns this
 */
proto.myPackage.CharacterInfo.prototype.clearAppearanceList = function() {
  return this.setAppearanceList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.CharacterAppearance.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.CharacterAppearance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.CharacterAppearance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.CharacterAppearance.toObject = function(includeInstance, msg) {
  var f, obj = {
    part: jspb.Message.getFieldWithDefault(msg, 1, 0),
    value: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.CharacterAppearance}
 */
proto.myPackage.CharacterAppearance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.CharacterAppearance;
  return proto.myPackage.CharacterAppearance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.CharacterAppearance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.CharacterAppearance}
 */
proto.myPackage.CharacterAppearance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.myPackage.CharacterAppearancePart} */ (reader.readEnum());
      msg.setPart(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.CharacterAppearance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.CharacterAppearance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.CharacterAppearance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.CharacterAppearance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPart();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValue();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional CharacterAppearancePart part = 1;
 * @return {!proto.myPackage.CharacterAppearancePart}
 */
proto.myPackage.CharacterAppearance.prototype.getPart = function() {
  return /** @type {!proto.myPackage.CharacterAppearancePart} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.myPackage.CharacterAppearancePart} value
 * @return {!proto.myPackage.CharacterAppearance} returns this
 */
proto.myPackage.CharacterAppearance.prototype.setPart = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 value = 2;
 * @return {number}
 */
proto.myPackage.CharacterAppearance.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.CharacterAppearance} returns this
 */
proto.myPackage.CharacterAppearance.prototype.setValue = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.WrappedEntityState.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.WrappedEntityState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.WrappedEntityState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.WrappedEntityState.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.WrappedEntityState}
 */
proto.myPackage.WrappedEntityState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.WrappedEntityState;
  return proto.myPackage.WrappedEntityState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.WrappedEntityState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.WrappedEntityState}
 */
proto.myPackage.WrappedEntityState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.myPackage.EntityType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.WrappedEntityState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.WrappedEntityState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.WrappedEntityState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.WrappedEntityState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional EntityType type = 1;
 * @return {!proto.myPackage.EntityType}
 */
proto.myPackage.WrappedEntityState.prototype.getType = function() {
  return /** @type {!proto.myPackage.EntityType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.myPackage.EntityType} value
 * @return {!proto.myPackage.WrappedEntityState} returns this
 */
proto.myPackage.WrappedEntityState.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.myPackage.WrappedEntityState.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.myPackage.WrappedEntityState.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.myPackage.WrappedEntityState.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.myPackage.WrappedEntityState} returns this
 */
proto.myPackage.WrappedEntityState.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.myPackage.PlayerState.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.PlayerState.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.PlayerState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.PlayerState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.PlayerState.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && proto.myPackage.Vector2.toObject(includeInstance, f),
    facingdirection: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dataid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    movetype: jspb.Message.getFieldWithDefault(msg, 4, 0),
    gamesessionid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    accountid: jspb.Message.getFieldWithDefault(msg, 6, 0),
    characterid: jspb.Message.getFieldWithDefault(msg, 7, 0),
    displayname: jspb.Message.getFieldWithDefault(msg, 8, ""),
    appearanceList: jspb.Message.toObjectList(msg.getAppearanceList(),
    proto.myPackage.CharacterAppearance.toObject, includeInstance),
    danceindex: jspb.Message.getFieldWithDefault(msg, 10, 0),
    timetolive: jspb.Message.getFieldWithDefault(msg, 11, 0),
    lastkeepalive: jspb.Message.getFieldWithDefault(msg, 12, 0),
    lastmove: jspb.Message.getFieldWithDefault(msg, 13, 0),
    lastteleport: jspb.Message.getFieldWithDefault(msg, 14, 0),
    lastchannelupdate: jspb.Message.getFieldWithDefault(msg, 15, 0),
    lastappearanceupdate: jspb.Message.getFieldWithDefault(msg, 16, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.PlayerState}
 */
proto.myPackage.PlayerState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.PlayerState;
  return proto.myPackage.PlayerState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.PlayerState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.PlayerState}
 */
proto.myPackage.PlayerState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.myPackage.Vector2;
      reader.readMessage(value,proto.myPackage.Vector2.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = /** @type {!proto.myPackage.FacingDirection} */ (reader.readEnum());
      msg.setFacingdirection(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDataid(value);
      break;
    case 4:
      var value = /** @type {!proto.myPackage.MoveType} */ (reader.readEnum());
      msg.setMovetype(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGamesessionid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharacterid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayname(value);
      break;
    case 9:
      var value = new proto.myPackage.CharacterAppearance;
      reader.readMessage(value,proto.myPackage.CharacterAppearance.deserializeBinaryFromReader);
      msg.addAppearance(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDanceindex(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimetolive(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastkeepalive(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastmove(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastteleport(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastchannelupdate(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLastappearanceupdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.PlayerState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.PlayerState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.PlayerState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.PlayerState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.myPackage.Vector2.serializeBinaryToWriter
    );
  }
  f = message.getFacingdirection();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getDataid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getMovetype();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getGamesessionid();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getAccountid();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getCharacterid();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getDisplayname();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getAppearanceList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.myPackage.CharacterAppearance.serializeBinaryToWriter
    );
  }
  f = message.getDanceindex();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getTimetolive();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getLastkeepalive();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getLastmove();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getLastteleport();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getLastchannelupdate();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
  f = message.getLastappearanceupdate();
  if (f !== 0) {
    writer.writeInt64(
      16,
      f
    );
  }
};


/**
 * optional Vector2 position = 1;
 * @return {?proto.myPackage.Vector2}
 */
proto.myPackage.PlayerState.prototype.getPosition = function() {
  return /** @type{?proto.myPackage.Vector2} */ (
    jspb.Message.getWrapperField(this, proto.myPackage.Vector2, 1));
};


/**
 * @param {?proto.myPackage.Vector2|undefined} value
 * @return {!proto.myPackage.PlayerState} returns this
*/
proto.myPackage.PlayerState.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.myPackage.PlayerState.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FacingDirection facingDirection = 2;
 * @return {!proto.myPackage.FacingDirection}
 */
proto.myPackage.PlayerState.prototype.getFacingdirection = function() {
  return /** @type {!proto.myPackage.FacingDirection} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.myPackage.FacingDirection} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setFacingdirection = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int64 dataId = 3;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getDataid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setDataid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional MoveType moveType = 4;
 * @return {!proto.myPackage.MoveType}
 */
proto.myPackage.PlayerState.prototype.getMovetype = function() {
  return /** @type {!proto.myPackage.MoveType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.myPackage.MoveType} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setMovetype = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional int64 gameSessionId = 5;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getGamesessionid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setGamesessionid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 accountId = 6;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getAccountid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 characterId = 7;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getCharacterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setCharacterid = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string displayName = 8;
 * @return {string}
 */
proto.myPackage.PlayerState.prototype.getDisplayname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setDisplayname = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * repeated CharacterAppearance appearance = 9;
 * @return {!Array<!proto.myPackage.CharacterAppearance>}
 */
proto.myPackage.PlayerState.prototype.getAppearanceList = function() {
  return /** @type{!Array<!proto.myPackage.CharacterAppearance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.myPackage.CharacterAppearance, 9));
};


/**
 * @param {!Array<!proto.myPackage.CharacterAppearance>} value
 * @return {!proto.myPackage.PlayerState} returns this
*/
proto.myPackage.PlayerState.prototype.setAppearanceList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.myPackage.CharacterAppearance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.myPackage.CharacterAppearance}
 */
proto.myPackage.PlayerState.prototype.addAppearance = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.myPackage.CharacterAppearance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.clearAppearanceList = function() {
  return this.setAppearanceList([]);
};


/**
 * optional int32 danceIndex = 10;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getDanceindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setDanceindex = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int32 timeToLive = 11;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getTimetolive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setTimetolive = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 lastKeepAlive = 12;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getLastkeepalive = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setLastkeepalive = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int64 lastMove = 13;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getLastmove = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setLastmove = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 lastTeleport = 14;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getLastteleport = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setLastteleport = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 lastChannelUpdate = 15;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getLastchannelupdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setLastchannelupdate = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional int64 lastAppearanceUpdate = 16;
 * @return {number}
 */
proto.myPackage.PlayerState.prototype.getLastappearanceupdate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.PlayerState} returns this
 */
proto.myPackage.PlayerState.prototype.setLastappearanceupdate = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.Vector2.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.Vector2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.Vector2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.Vector2.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.Vector2}
 */
proto.myPackage.Vector2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.Vector2;
  return proto.myPackage.Vector2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.Vector2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.Vector2}
 */
proto.myPackage.Vector2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.Vector2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.Vector2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.Vector2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.Vector2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.myPackage.Vector2.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.Vector2} returns this
 */
proto.myPackage.Vector2.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.myPackage.Vector2.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.Vector2} returns this
 */
proto.myPackage.Vector2.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.myPackage.GameSessionOpenedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.myPackage.GameSessionOpenedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.GameSessionOpenedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountid: jspb.Message.getFieldWithDefault(msg, 1, 0),
    characterid: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entityid: jspb.Message.getFieldWithDefault(msg, 3, 0),
    wrappedentitystate: (f = msg.getWrappedentitystate()) && proto.myPackage.WrappedEntityState.toObject(includeInstance, f),
    channelid: jspb.Message.getFieldWithDefault(msg, 5, 0),
    mapid: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.myPackage.GameSessionOpenedEvent}
 */
proto.myPackage.GameSessionOpenedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.myPackage.GameSessionOpenedEvent;
  return proto.myPackage.GameSessionOpenedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.myPackage.GameSessionOpenedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.myPackage.GameSessionOpenedEvent}
 */
proto.myPackage.GameSessionOpenedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCharacterid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEntityid(value);
      break;
    case 4:
      var value = new proto.myPackage.WrappedEntityState;
      reader.readMessage(value,proto.myPackage.WrappedEntityState.deserializeBinaryFromReader);
      msg.setWrappedentitystate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChannelid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMapid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.myPackage.GameSessionOpenedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.myPackage.GameSessionOpenedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.myPackage.GameSessionOpenedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountid();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCharacterid();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getEntityid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getWrappedentitystate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.myPackage.WrappedEntityState.serializeBinaryToWriter
    );
  }
  f = message.getChannelid();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMapid();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
};


/**
 * optional int64 accountId = 1;
 * @return {number}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.getAccountid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.GameSessionOpenedEvent} returns this
 */
proto.myPackage.GameSessionOpenedEvent.prototype.setAccountid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 characterId = 2;
 * @return {number}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.getCharacterid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.GameSessionOpenedEvent} returns this
 */
proto.myPackage.GameSessionOpenedEvent.prototype.setCharacterid = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 entityId = 3;
 * @return {number}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.getEntityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.GameSessionOpenedEvent} returns this
 */
proto.myPackage.GameSessionOpenedEvent.prototype.setEntityid = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional WrappedEntityState wrappedEntityState = 4;
 * @return {?proto.myPackage.WrappedEntityState}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.getWrappedentitystate = function() {
  return /** @type{?proto.myPackage.WrappedEntityState} */ (
    jspb.Message.getWrapperField(this, proto.myPackage.WrappedEntityState, 4));
};


/**
 * @param {?proto.myPackage.WrappedEntityState|undefined} value
 * @return {!proto.myPackage.GameSessionOpenedEvent} returns this
*/
proto.myPackage.GameSessionOpenedEvent.prototype.setWrappedentitystate = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.myPackage.GameSessionOpenedEvent} returns this
 */
proto.myPackage.GameSessionOpenedEvent.prototype.clearWrappedentitystate = function() {
  return this.setWrappedentitystate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.hasWrappedentitystate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 channelId = 5;
 * @return {number}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.getChannelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.GameSessionOpenedEvent} returns this
 */
proto.myPackage.GameSessionOpenedEvent.prototype.setChannelid = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 mapId = 6;
 * @return {number}
 */
proto.myPackage.GameSessionOpenedEvent.prototype.getMapid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.myPackage.GameSessionOpenedEvent} returns this
 */
proto.myPackage.GameSessionOpenedEvent.prototype.setMapid = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * @enum {number}
 */
proto.myPackage.CharacterAppearancePart = {
  CHARACTER_APPEARANCE_PART_NONE: 0,
  CHARACTER_APPEARANCE_PART_EYES: 1
};

/**
 * @enum {number}
 */
proto.myPackage.EntityType = {
  ENTITY_TYPE_NONE: 0,
  ENTITY_TYPE_GENERIC: 1,
  ENTITY_TYPE_INTERACTABLE: 2,
  ENTITY_TYPE_OCCUPIABLE: 3,
  ENTITY_TYPE_MOBILE: 4,
  ENTITY_TYPE_PLAYER: 5,
  ENTITY_TYPE_NPC: 6,
  ENTITY_TYPE_PORTAL: 7,
  ENTITY_TYPE_DOOR: 8,
  ENTITY_TYPE_COLLECTABLE: 9,
  ENTITY_TYPE_DJBOOTH: 10
};

/**
 * @enum {number}
 */
proto.myPackage.ErrorCode = {
  UNDEFINED: 0,
  APPLICATIONINVALID: 1,
  APPLICATIONOUTOFDATE: 2,
  AUTHENTICATIONTOKENINVALID: 3,
  ACCOUNTBANNED: 4,
  MAINTENANCEACTIVE: 5,
  ACCOUNTINUSE: 6,
  CHARACTERINUSE: 7
};

/**
 * @enum {number}
 */
proto.myPackage.FacingDirection = {
  FACING_DIRECTION_NONE: 0,
  FACING_DIRECTION_NORTH: 1,
  FACING_DIRECTION_SOUTH: 2,
  FACING_DIRECTION_EAST: 3,
  FACING_DIRECTION_WEST: 4
};

/**
 * @enum {number}
 */
proto.myPackage.MoveType = {
  MOVE_TYPE_NONE: 0,
  MOVE_TYPE_WALK: 1,
  MOVE_TYPE_SPRINT: 2
};

goog.object.extend(exports, proto.myPackage);
